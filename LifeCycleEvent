/*
package com.example.lifecycle

import android.util.Log
import androidx.lifecycle.Lifecycle
import androidx.lifecycle.LifecycleObserver
import androidx.lifecycle.OnLifecycleEvent

class Observer :LifecycleObserver {
    @OnLifecycleEvent(Lifecycle.Event.ON_CREATE)   // catch the activity life cycle event
    fun onCreat() {                                 // ON_CREAT
        Log.d("Check", "On-Creat Run")       // running status check
    }

    @OnLifecycleEvent(Lifecycle.Event.ON_START)   // catch the activity life cycle event
    fun onStart() {                                //  ON_START
        Log.d("Check", "On-Start Run")      // running status check    }
    }

    @OnLifecycleEvent(Lifecycle.Event.ON_RESUME)   // catch the life cycle event
    fun onResume(){                                 // ON_RESUME
       Log.d("check","Observer On-Resume ") // running status check
    }

    @OnLifecycleEvent(Lifecycle.Event.ON_PAUSE)        //catch the Activity Lifecycle event
    fun onPause(){                                     //ON-Pause
       Log.d("check","Observer On-Pause Run") //running status check
    }

    @OnLifecycleEvent(Lifecycle.Event.ON_STOP)        //catch the Activity Lifecycle event
    fun onStop(){                                     //ON-Pause
        Log.d("check","Observer On-Stop Run") //running status check
    }

    @OnLifecycleEvent(Lifecycle.Event.ON_ANY)           //catch the Activity Lifecycle event
    fun onRestart(){                                     //ON-Restrat
        Log.d("check","Observer On-Restart Run") //running status check
    }

    @OnLifecycleEvent(Lifecycle.Event.ON_DESTROY)        //catch the Activity Lifecycle event
    fun onDestroy(){                                     //ON-Destroy
        Log.d("check","Observer On-Destroy Run") //running status check
    }

}


 Method	Description
onCreate	called when activity is first created.
onStart	    called when activity is becoming visible to the user.
onResume	called when activity will start interacting with the user.
onPause  	called when activity is not visible to the user.
onStop   	called when activity is no longer visible to the user.
onRestart 	called after your activity is stopped, prior to start.
onDestroy 	called before the activity is destroyed.

 */

package com.example.lifecycle

import androidx.appcompat.app.AppCompatActivity
import android.os.Bundle
import android.util.Log

class MainActivity : AppCompatActivity() {
    override fun onCreate(savedInstanceState: Bundle?) {   // Activity OnCreat RUN
        super.onCreate(savedInstanceState)           // call AppCompatActivity OnCreat
        setContentView(R.layout.activity_main)

        lifecycle.addObserver(Observer())                // attach our observer with activity
        Log.d("Check", "Activity On-Creat Run")   // running status check
    }

    override fun onStart() {                            // override ON_START function
        super.onStart()                                 // call  AppCompatActivity ON-Start
        Log.d("check","Activity On-Start Run")  // running status check
    }

    override fun onResume() {                           // override fun OnResume
        super.onResume()                                 // call  AppCompatActivity ON-Resume
        Log.d("check","Activity On-Resume")
    }

    override fun onPause() {                            // override fun OnPause
        super.onPause()                               // call  AppCompatActivity ON-Resume
        Log.d("check","Activity On-Resume")   // ruunning status check
    }

    override fun onStop() {                         //override fun OnStop
        super.onStop()                              // call  AppCompatActivity ON-Stop
        Log.d("check","Activity On-Stop Run")  // running status check
    }

    override fun onRestart() {                           //override fun OnRestart
        super.onRestart()                               // call  AppCompatActivity ON-Restart
        Log.d("check","Activity On-Restart Run") // running status check
    }

    override fun onDestroy() {                            //override fun OnDestroy
        super.onDestroy()                                 // call  AppCompatActivity OnDestroy
        Log.d("check","Activity On-Destroy Run")  // running status check
    }

}
